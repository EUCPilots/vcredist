name: Update module manifest

on:
  workflow_dispatch:
  push:
    branches: [ development ]
    paths:
      - ci/Update-Manifest.ps1
  schedule:
    - cron: '0 18 * * *'

env:
  MANIFEST_FILE: ${{ github.workspace }}\VcRedist\VisualCRedistributables.json

jobs:
  validate-amd64:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: development
          token: ${{ secrets.GITHUB_TOKEN }}

      # Import GPG key so that we can sign the commit
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPGKEY }}
          passphrase: ${{ secrets.GPGPASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_config_global: true
          git_tag_gpgsign: true
          git_push_gpgsign: false
          git_committer_name: ${{ secrets.COMMIT_NAME }}
          git_committer_email: ${{ secrets.COMMIT_EMAIL }}

      # Uninstall existing VcRedists
      - name: Uninstall VcRedists
        shell: powershell
        run: |
          Import-Module ${{ github.workspace }}\VcRedist -Force
          Get-InstalledVcRedist | Uninstall-VcRedist -Confirm:$False -Verbose

      # Validate VcRedist 2017 and update the manifest
      - name: Validate VcRedist 2017
        shell: powershell
        run: |
          $Release = "2017"
          Import-Module "${{ github.workspace }}\VcRedist" -Force
          New-Item -Path "$env:RUNNER_TEMP\VcRedist" -ItemType "Directory" -ErrorAction "SilentlyContinue" | Out-Null
          Get-VcList -Release $Release | Save-VcRedist -Path "$env:RUNNER_TEMP\VcRedist" | Install-VcRedist
          $params = @{
              Release    = $Release
              Path       = "$env:RUNNER_TEMP\VcRedist"
              VcManifest = "${{ env.MANIFEST_FILE }}"
          }
          . ${{ github.workspace }}\ci\Update-Manifest.ps1 @params

      # Validate VcRedist 2019 and update the manifest
      - name: Validate VcRedist 2019
        shell: powershell
        run: |
          $Release = "2019"
          Import-Module "${{ github.workspace }}\VcRedist" -Force
          New-Item -Path "$env:RUNNER_TEMP\VcRedist" -ItemType "Directory" -ErrorAction "SilentlyContinue" | Out-Null
          Get-VcList -Release $Release | Save-VcRedist -Path "$env:RUNNER_TEMP\VcRedist" | Install-VcRedist
          $params = @{
              Release    = $Release
              Path       = "$env:RUNNER_TEMP\VcRedist"
              VcManifest = "${{ env.MANIFEST_FILE }}"
          }
          . ${{ github.workspace }}\ci\Update-Manifest.ps1 @params

      # Validate VcRedist 2022 and update the manifest
      - name: Validate VcRedist 2022
        shell: powershell
        run: |
          $Release = "2022"
          Import-Module "${{ github.workspace }}\VcRedist" -Force
          New-Item -Path "$env:RUNNER_TEMP\VcRedist" -ItemType "Directory" -ErrorAction "SilentlyContinue" | Out-Null
          Get-VcList -Release $Release | Save-VcRedist -Path "$env:RUNNER_TEMP\VcRedist" | Install-VcRedist
          $params = @{
              Release    = $Release
              Path       = "$env:RUNNER_TEMP\VcRedist"
              VcManifest = "${{ env.MANIFEST_FILE }}"
          }
          . ${{ github.workspace }}\ci\Update-Manifest.ps1 @params

      # Format the date number for the commit message
      - name: Get date
        id: get-date
        shell: powershell
        run: |
          echo "date=$(Get-Date -Format "yyyy-MM-dd")" >> $GITHUB_STATE

      # Commit changes to the manifest
      - name: Commit changes
        id: commit
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: "Update manifest ${{ steps.get-date.outputs.date }}.${{ github.run_number }}"
          commit_user_name: ${{ secrets.COMMIT_NAME }}
          commit_user_email: ${{ secrets.COMMIT_EMAIL }}

      - name: "Run if changes have been detected"
        if: steps.commit.outputs.changes_detected == 'true'
        run: echo "Changes committed."

      - name: "Run if no changes have been detected"
        if: steps.commit.outputs.changes_detected == 'false'
        run: echo "No changes detected."

  validate-arm64:
    runs-on: windows-11-arm
    needs: validate-amd64

    steps:
      - uses: actions/checkout@v4
        with:
          ref: development
          token: ${{ secrets.GITHUB_TOKEN }}

      # Import GPG key so that we can sign the commit
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPGKEY }}
          passphrase: ${{ secrets.GPGPASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_config_global: true
          git_tag_gpgsign: true
          git_push_gpgsign: false
          git_committer_name: ${{ secrets.COMMIT_NAME }}
          git_committer_email: ${{ secrets.COMMIT_EMAIL }}

      # Uninstall existing VcRedists
      - name: Uninstall VcRedists
        shell: powershell
        run: |
          Import-Module ${{ github.workspace }}\VcRedist -Force
          Get-InstalledVcRedist | Uninstall-VcRedist -Confirm:$False -Verbose

      # Validate VcRedist 2022 and update the manifest
      - name: Validate VcRedist 2022
        shell: powershell
        run: |
          $Release = "2022"
          $Architecture = "arm64"
          Import-Module "${{ github.workspace }}\VcRedist" -Force
          New-Item -Path "$env:RUNNER_TEMP\VcRedist" -ItemType "Directory" -ErrorAction "SilentlyContinue" | Out-Null
          Get-VcList -Release $Release -Architecture $Architecture | Save-VcRedist -Path "$env:RUNNER_TEMP\VcRedist" | Install-VcRedist
          $params = @{
              Release      = $Release
              Architecture = $Architecture
              Path         = "$env:RUNNER_TEMP\VcRedist"
              VcManifest   = "${{ env.MANIFEST_FILE }}"
          }
          . ${{ github.workspace }}\ci\Update-Manifest.ps1 @params

      # Format the date number for the commit message
      - name: Get date
        id: get-date
        shell: powershell
        run: |
          echo "date=$(Get-Date -Format "yyyy-MM-dd")" >> $GITHUB_STATE

      # Commit changes to the manifest
      - name: Commit changes
        id: commit
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: "Update manifest ARM64 ${{ steps.get-date.outputs.date }}.${{ github.run_number }}"
          commit_user_name: ${{ secrets.COMMIT_NAME }}
          commit_user_email: ${{ secrets.COMMIT_EMAIL }}

      - name: "Run if changes have been detected"
        if: steps.commit.outputs.changes_detected == 'true'
        run: echo "Changes committed."

      - name: "Run if no changes have been detected"
        if: steps.commit.outputs.changes_detected == 'false'
        run: echo "No changes detected."
